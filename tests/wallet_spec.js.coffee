describe "Wallet", ->

  describe "decryptPasswordWithProcessedPin()", ->
        it "should return the password", ->
              data = 'pKPZ1y8lM9aixrcaW3VGHdZkQL37ESyFQvgxVSIjhEo='
              password = '60ae40d723196edea0ae35ace25db8961905dd8582ae813801c7494e71173925'
              pbkdf2_iterations = 1

              decrypted_password = MyWallet.decryptPasswordWithProcessedPin(data, password, pbkdf2_iterations)

              expect(decrypted_password).toBe('testtest12')
        
        return

  describe "decrypt()", ->
        it "should decrypt a test wallet", ->
              data = ''
              password = '1234567890'
              pbkdf2_iterations = 10

              obj = {}
              obj.success = (result) ->
                return

              spyOn(obj, "success")

              MyWallet.decrypt(data, password, pbkdf2_iterations, obj.success)
              expect(obj.success).toHaveBeenCalled()
              expect(obj.success.calls.argsFor(0)[0]).toContain("78019bee-7a27-490b-ab8a-446c2749bf1f")

        
        return
