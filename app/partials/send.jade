.modal-header.flex-column.bc-modal-header
  .flex-center
    img(src="img/arrow-up.png")
    h3(ng-show="step == 1 && !advanced", translate="SEND_BITCOIN")
    h3.scale(ng-show="advanced && step == 1", translate="ADVANCED_SEND")
    h3(ng-show="confirmationStep", translate="CONFIRM")
  h5(ng-show="step == 1 && !advanced") Send bitcoin instantly to any bitcoin address, email, or phone number
  h5(ng-show="confirmationStep") Please review your transaction
  h5(ng-show="advanced && step == 1") Send bitcoin to one or more addresses, choose your fee price and review your transaction before submitting
  p.step Step {{step}} of 2
.modal-body#send
  alert(ng-repeat="alert in alerts", type="{{alert.type}}", close="closeAlert(alert)") 
    | {{alert.msg}}
  div(ng-hide="confirmationStep")
    form.form-horizontal(role="form",name="form",novalidate)
      .flex-column.form-group(ng-show="numberOfActiveAccountsAndLegacyAddresses() > 1")
        label.mbm
          span(translate="FROM:")
        div
          p.form-control-static(ng-hide="originsLoaded")
            img(src="img/spinner.gif")
          span(ng-show="originsLoaded")
            ui-select(ng-model="transaction.from")
              ui-select-match {{ maxAndLabelForSelect($select) }} 
              ui-select-choices(repeat="origin in origins | filter: getFilter($select.search)" group-by="'type'" ui-disable-choice="hasZeroBalance(origin)") 
                span(ng-bind-html="maxAndLabel(origin) | highlight: $select.search" ng-class="{zerobalance: hasZeroBalance(origin)}")
      .flex-column.form-group(ng-class="{'has-error': errors.to, 'has-success' : success.to}", ng-hide="advanced")
        label.mbm.flex-between
          span(translate="TO:")
        .flex-center.prl
          p.form-control-static(ng-hide="originsLoaded", )
            img(src="img/spinner.gif")
          // Use input-group if camera is present.
          .input-group(ng-show="originsLoaded", ng-if="browserWithCamera")
            ui-select(ng-model="transaction.destination", ng-blur="visualValidate('to')")
              ui-select-match(placeholder="Paste, scan or select address") {{ $select.selected.label }}
              ui-select-choices(repeat="destination in destinations | filter: getFilter($select.search)" group-by="'type'" refresh="refreshDestinations($select.search)" refresh-delay="0") 
                span(ng-bind-html="determineLabel(destination) | highlight: $select.search")
            span.input-group-btn.mls
              button#qr.btn.btn-default(type="button", ng-click="cameraOn()")
                img(src="img/qr.png", alt="QR")
          ui-select(ng-model="transaction.destination", ng-blur="visualValidate('to')", ng-if="!browserWithCamera")
            ui-select-match(placeholder="Paste, scan or select address") {{ $select.selected.label }}
            ui-select-choices(repeat="destination in destinations | filter: getFilter($select.search)" group-by="'type'" refresh="refreshDestinations($select.search)" refresh-delay="0") 
              span(ng-bind-html="determineLabel(destination) | highlight: $select.search")
          span.help-block {{ errors.to }}
      .flex-column.form-group(ng-class="{'has-error': errors.amount}", ng-hide="advanced")
        label.mbm
          span(translate="AMOUNT")
        .flex-center
          .mrl.flex-1
            .flex-center
              span.mrm {{ transaction.currency.code }}:
              input.form-control(type="text",ng-model="transaction.amount",ng-blur="visualValidate('amount')")          
            span.help-block {{ errors.amount }}
          a.button-success.button-sm.type-sm.mrl.flex-center(ng-click="toggleCurrency()")
            i.ti-arrows-horizontal
          .flex-center.ccc.conversion.flex-1
            p.mbn
              fiat(currency="settings.currency", btc="transaction.satoshi",  ng-show="isBitCurrency(transaction.currency)")
              span(ng-hide="isBitCurrency(transaction.currency)") {{ transaction.satoshi | toBitCurrency:btcCurrency:false }}
      //- Advanced Send
      .flex-center.flex-column.scale.form-group.mvl.advanced-recipient(ng-show="advanced" ng-class="{'has-error': errors.amounts}")
        label.mbm.flex-between.width-100
          span(translate="TO:")
          span.flex-center.type-sm.pointer(ng-click="addDestination()")
            | Add Another Recipient
            i.ti-plus.mlm
        .flex-center.prl.advanced-recipient-row(ng-repeat="item in transaction.multipleDestinations track by $index")
          p.form-control-static(ng-hide="originsLoaded")
            img(src="img/spinner.gif")
          // Use input-group if camera is present.
          .flex(ng-show="originsLoaded", ng-if="browserWithCamera")
            ui-select(ng-model="transaction.multipleDestinations[$index]", ng-blur="visualValidate('to')")
              ui-select-match(placeholder="Paste, scan or select address") {{ $select.selected.label }}
              ui-select-choices(repeat="destination in destinations | filter: getFilter($select.search)" group-by="'type'" refresh="refreshDestinations($select.search)" refresh-delay="0") 
                span(ng-bind-html="determineLabel(destination) | highlight: $select.search")
            span.mls
              button#qr.button(type="button", ng-click="cameraOn()")
                img(src="img/qr.png", alt="QR")
          ui-select(ng-model="transaction.multipleDestinations[$index]", ng-blur="visualValidate('to')", ng-if="!browserWithCamera")
            ui-select-match(placeholder="Paste, scan or select address") {{ $select.selected.label }}
            ui-select-choices(repeat="destination in destinations | filter: getFilter($select.search)" group-by="'type'" refresh="refreshDestinations($select.search)" refresh-delay="0") 
              span(ng-bind-html="determineLabel(destination) | highlight: $select.search")
          .flex-center
            span.mrm {{ transaction.currency.code }}:
            input.form-control(type="text" ng-blur="visualValidate('amounts')" ng-model="transaction.multipleAmounts[$index]")
          i.ti-close.mlm.pointer(ng-click="removeDestination($index)")
        span.help-block {{ errors.amounts }}
      .flex-column.form-group.scale(ng-class="{'has-error': errors.fee}" ng-show="advanced")
        label.mbm
          span(translate="MINERS_FEE")
        p.ccc(translate="MINERS_FEE_EXPLAIN")
        .flex-center
          .flex-column.border-right.prm.miners-fee-selection
            label
              input(type="radio" ng-model="transaction.fee" value="0" name="miners-fee")
              | Frugal
            label
              input(type="radio" ng-model="transaction.fee" value="10000" name="miners-fee")
              | Normal
              span.success.mls.type-xs (Recommended)
            label
              input(type="radio" ng-model="transaction.fee" value="100000" name="miners-fee")
              | Generous
          .flex-center.plm
            .mrl.flex-1
              .flex-center
                span.mrm {{ transaction.currency.code }}:
                input.form-control(type="text" ng-blur="visualValidate('fee')" ng-model="transaction.feeAmount")
              span.help-block {{ errors.fee }}
            a.button-success.button-sm.type-sm.mrl.flex-center(ng-click="toggleCurrency()")
              i.ti-arrows-horizontal
            .flex-center.ccc.conversion.flex-1
              p.mbn
                fiat(currency="settings.currency", btc="transaction.fee",  ng-show="isBitCurrency(transaction.currency)")
                span(ng-hide="isBitCurrency(transaction.currency)") {{ transaction.fee | toBitCurrency:btcCurrency:false }}
        
      //- .form-group(ng-show="advanced")
      //-   label.col-sm-3.control-label(translate="FEES")
      //-   .col-sm-5
      //-     p.form-control-static {{ transaction.fee | numeraljs:'btc' }}
      //- .form-group
      //-   label.col-sm-3.control-label(translate="PRIVACY_GUARD")
      //-   .col-sm-4.privacy-guard
      //-     p.form-control-static
      //-       img.privacy-guard(ng-src="img/switch-{{ privacyGuard ? 'on' : 'off' }}.png", ng-alt="{{ privacyGuard ? 'on' : 'off' }}", ng-click="privacyGuard = !privacyGuard")
      .flex-column.form-group(ng-hide="!cameraIsOn")
        label.flex-1(translate="QR") Scan your QR code:
        .flex-1
          bc-qr-reader(active="cameraRequested", on-result="processURLfromQR" on-error="onError" camera-status="cameraIsOn")
  div.overview(ng-show="confirmationStep")
    .flex-column
      .flex-center.control-group.mbl
        label.mbn.mrl(translate="FROM:")
        h4.mvn.flex-1.ccc.em-300 {{ from }}
        label.mbn.mrl(translate="TO:")
        h4.btcaddr.mvn.flex-1.ccc.em-300 {{ toLabel }}
      ul.total-amounts.ccc.ptm
        label.mbn(translate="OVERVIEW")
        li.amount-item
          p(translate="AMOUNT")
          p
            {{ transaction.satoshi | toBitCurrency:btcCurrency:false }}
          p
            fiat(btc="transaction.satoshi")
        li.amount-item
          p(translate="FEE")
            | :
          p
            {{ transaction.fee | toBitCurrency:btcCurrency:false }}
          p
            fiat(btc="transaction.fee")
            span.why-fee why?
        li.amount-item.blue
          p(translate="TOTAL")
            | :
          p
            {{ transaction.fee + transaction.satoshi | toBitCurrency:btcCurrency:false }}
          p
            fiat(btc="transaction.satoshi + transaction.fee")
      .flex-column.form-group(ng-class="{'has-error': errors.note}")
        label(translate="NOTE") 
          |:
        textarea(rows="4", ng-model="transaction.note", ng-blur="visualValidate('note')")
        .flex-center.mtm
          input.mrs(type="checkbox", ng-model="transaction.publicNote")
          | &nbsp;
          span(translate="MAKE_PUBLIC")
        span.help-block {{ errors.note }}

.modal-footer.flex-between.flex-center.pal
  .flex-center
    a.ccc(ng-class="{invisible: step == 2}", ng-hide="advanced", ng-click="advancedSend()", translate="ADVANCED_SEND")
    a.ccc(ng-show="advanced", ng-click="regularSend()", translate="REGULAR_SEND")
  .flex-center.flex-end
    button.button-muted-off.mrm(ng-click="cameraOff()", ng-show="cameraIsOn", translate="CAMERA_OFF")
    button.button-muted.scale.mrm(ng-show="advanced", translate="RESET_FORM", ng-click="resetSendForm()")
    button.button-muted.mrm(ng-click="close()", translate="CANCEL", ng-hide="confirmationStep")
    button.button-muted.mrm(ng-click="backToForm()", translate="BACK", ng-show="confirmationStep")
    button.button-success.button-lg(ng-click="goToConfirmation()",ng-disabled="!transactionIsValid", translate="NEXT_STEP", ng-hide="confirmationStep")
    button.button-success.button-lg(ui-ladda="{{ sending }}", ng-click="send()",ng-disabled="!transactionIsValid", data-style="expand-left", ladda-translate="SEND", ng-show="confirmationStep")
